name: 'Bootstrap - Deploy State Bucket'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  contents: read
  id-token: write

jobs:
  bootstrap:
    name: 'Bootstrap State Bucket - ${{ inputs.action }}'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./bootstrap

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v3
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT_GCS}}
        token_format: 'access_token'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v3


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        if [ "${{ inputs.action }}" == "destroy" ]; then
          terraform plan -destroy -no-color -input=false -var="service_account_email=gcs-sa@sandbox-juangar.iam.gserviceaccount.com"
        else
          terraform plan -no-color -input=false -var="service_account_email=gcs-sa@sandbox-juangar.iam.gserviceaccount.com"
        fi

    - name: Terraform Apply/Destroy
      run: |
        if [ "${{ inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve -input=false -var="service_account_email=gcs-sa@sandbox-juangar.iam.gserviceaccount.com"
        else
          terraform apply -auto-approve -input=false -var="service_account_email=gcs-sa@sandbox-juangar.iam.gserviceaccount.com"
        fi

    - name: Output State Bucket Name
      if: inputs.action == 'apply'
      run: terraform output state_bucket_name